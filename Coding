%matplotlib inline
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
plt.rcParams['figure.figsize'] = (50.0,10.0)

df=pd.read_csv("Student.csv")

df.head()

#Collecting X & Y
X = df['Hours'].values
Y = df['Scores'].values

#Find mean of X & Y
mean_x = np.mean(X)
mean_y = np.mean(Y)

#Tootal number of values
m = len(X)

#Using the formula to calculate b1 & b0
numer = 0
denom = 0

for i in range(m):
    numer += (X[i] - mean_x) * (Y[i] - mean_y)
    denom += (X[i] - mean_x) ** 2
    
b1=numer/denom
b0=mean_y-(b1*mean_x)

#Printing the coefficients
print(b1,b0)


#Ploting values and Regression line
max_x = np.max(X)+100
min_x = np.min(X)-100

#Calculating line value of x and y
x = np.linspace(min_x,max_x,1000)
y = b0+b1*x

#Ploting line and scatter points
plt.plot(x,y,color='green',label='Regression Line')
plt.scatter(X,Y,c='red',label='Scatter Plot')

plt.xlabel('bmi')
plt.ylabel('charges')
plt.legend()
plt.show()


#Fitting the model and finding the predicted value
from sklearn.linear_model import LinearRegression


X=X.reshape((m,1))
reg=LinearRegression()
reg=reg.fit(X,Y)
Y_pred=reg.predict([[9.25]])


print(Y_pred)
